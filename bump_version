#!/usr/bin/env perl

use 5.010;
use strict;
use warnings FATAL => 'all';
use autodie;
use English qw( -no_match_vars );
use IPC::Cmd;

chomp(my $LATEST = qx(grep '^[0-9]' r2/Changes | head -1 | awk '{print \$1}'));

warn "Bumping -> $LATEST\n";

my @versioned_files = split /\n/xms, <<'END_OF_LIST';
r2/html/lib/Marpa/R2/HTML/Callback.pm
r2/html/lib/Marpa/R2/HTML.pm
r2/lib/Marpa/R2/Grammar.pm
r2/lib/Marpa/R2/Internal.pm
r2/lib/Marpa/R2/Recognizer.pm
r2/lib/Marpa/R2/Value.pm
r2/lib/Marpa/R2.pm
END_OF_LIST

for my $versioned_file (@versioned_files) {
    say STDERR $versioned_file;
    my $file = do { local ( @ARGV, $/ ) = ($versioned_file); <> };
    $file =~ s/(\$VERSION \s+ =  \s+ ['] ) \d [.] \d\d\d [_.] \d\d\d /$1${LATEST}/xms;
    open my $out, '>', $versioned_file;
    print $out $file;
} ## end for my $versioned_file (@versioned_files)

chdir 'r2';
die qq{"perl Build.PL" failed: $!}
        if not IPC::Cmd::run( command => [$EXECUTABLE_NAME, 'Build.PL'], verbose => 1 );
die qq{"./Build distmeta" failed: $!}
        if not IPC::Cmd::run( command => ['./Build', 'distmeta'], verbose => 1 );
